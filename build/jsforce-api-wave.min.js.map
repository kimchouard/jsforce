{"version":3,"file":"jsforce-api-wave.min.js","sources":["jsforce-api-wave.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","jsforce","modules","api","Wave","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"conn","_conn","prototype","query","SAQLquery","callback","url","_baseUrl","join","params","method","headers","Content-Type","body","JSON","stringify","request","thenCall"],"mappings":";CAAA,SAAUA,GAAG,GAAoB,gBAAVC,UAAoC,mBAATC,QAAsBA,OAAOD,QAAQD,QAAS,IAAmB,kBAATG,SAAqBA,OAAOC,IAAKD,UAAUH,OAAO,CAAC,GAAIK,EAAkCA,GAAb,mBAATC,QAAwBA,OAA+B,mBAATC,QAAwBA,OAA6B,mBAAPC,MAAsBA,KAAYC,KAAKJ,EAAGA,EAAEK,UAAUL,EAAEK,YAAeL,EAAGA,EAAEM,UAAUN,EAAEM,YAAeN,EAAGA,EAAEO,MAAMP,EAAEO,QAAWP,EAAEQ,KAAOb,MAAO,WAAqC,MAAO,SAAUc,GAAEC,EAAEC,EAAEC,GAAG,QAASC,GAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,GAAIE,GAAkB,kBAATC,UAAqBA,OAAQ,KAAIF,GAAGC,EAAE,MAAOA,GAAEF,GAAE,EAAI,IAAGI,EAAE,MAAOA,GAAEJ,GAAE,EAAI,IAAInB,GAAE,GAAIwB,OAAM,uBAAuBL,EAAE,IAAK,MAAMnB,GAAEyB,KAAK,mBAAmBzB,EAAE,GAAI0B,GAAEV,EAAEG,IAAIlB,WAAYc,GAAEI,GAAG,GAAGQ,KAAKD,EAAEzB,QAAQ,SAASa,GAAG,GAAIE,GAAED,EAAEI,GAAG,GAAGL,EAAG,OAAOI,GAAEF,EAAEA,EAAEF,IAAIY,EAAEA,EAAEzB,QAAQa,EAAEC,EAAEC,EAAEC,GAAG,MAAOD,GAAEG,GAAGlB,QAAkD,IAAI,GAA1CsB,GAAkB,kBAATD,UAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEW,OAAOT,IAAID,EAAED,EAAEE,GAAI,OAAOD,KAAKW,GAAG,SAASP,EAAQpB,EAAOD,GAM35B,GASIY,IATWH,QAAQY,QAAQ,cAChBZ,QAAQY,QAAQ,aAQpB,SAASQ,GAClBrB,KAAKsB,MAAQD,GAWfjB,GAAKmB,UAAUC,MAAQ,SAASC,EAAWC,GACzC,GACIC,IAAQ3B,KAAKsB,MAAMM,WAAY,OAAQ,SAAUC,KAAK,KACtDC,GACFC,OAAS,OACTJ,IAAMA,EACNK,SAAWC,eAAiB,oBAC5BC,KAAMC,KAAKC,WAAYZ,MAAOC,IAGhC,OAAOzB,MAAKsB,MAAMe,QAAQP,GAAQQ,SAASZ,IAG7CjC,EAAOD,QAAUY,YAEN,IAAI","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g=(g.jsforce||(g.jsforce = {}));g=(g.modules||(g.modules = {}));g=(g.api||(g.api = {}));g.Wave = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * @file Manages Salesforce Wave API\n * @author Kim Chouard <kim.chouard@gmail.com>\n */\n\nvar _        = jsforce.require('underscore'),\n    Promise  = jsforce.require('./promise');\n\n/**\n * API class for Wave API\n *\n * @class\n * @param {Connection} conn Connection\n */\nvar Wave = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * Run a SAQL query\n *\n * @method Wave#query\n * @param {Object} [SAQLquery] - Query string\n * @param {Callback.<Wave~QueryResult>} [callback] - Callback function\n * @returns {Promise.<Wave~QueryResult>}\n */\nWave.prototype.query = function(SAQLquery, callback) {\n  var options = {};\n  var url = [ this._conn._baseUrl(), \"wave\", \"query\" ].join('/');\n  var params = {\n    method : 'POST',\n    url : url,\n    headers: { \"Content-Type\" : \"application/json\" },\n    body: JSON.stringify({ query: SAQLquery })\n  };\n\n  return this._conn.request(params).thenCall(callback);\n};\n\nmodule.exports = Wave;\n\n},{}]},{},[1])(1)\n});"]}